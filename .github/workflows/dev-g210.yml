name: Glimpse Dev Sanity Check CI

# Triggers the workflow on push or pull request events, but only for the dev-g210 branch
on:
  push:
    branches: [ dev-g210 ]
  pull_request:
    branches: [ dev-g210 ]

jobs:
  build-macos-dev:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        path: Glimpse

    - name: Set up home directory
      run: |
        mkdir -p $HOME/project
        cp -rf ${{ github.workspace }}/Glimpse/build-aux/macos/jhbuildrc-gtk-osx-glimpse $HOME/project
    
    - name: Install Rust compiler
      run: curl https://sh.rustup.rs -sSf | sh -s -- -y
    
    - name: Set up Python 3
      run: |
        curl -L 'https://www.python.org/ftp/python/3.6.8/python-3.6.8-macosx10.9.pkg' > python-3.6.8-macosx10.9.pkg
        sudo installer -pkg python-3.6.8-macosx10.9.pkg -target /

    - name: Install macOS 10.9 SDK
      run: |
        cd /Library/Developer/CommandLineTools/SDKs
        sudo curl -L 'https://github.com/phracker/MacOSX-SDKs/releases/download/MacOSX10.11.sdk/MacOSX10.9.sdk.tar.xz' | sudo tar -xzf -
        echo 'export SDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX10.9.sdk' > ~/.profile
        echo 'export MACOSX_DEPLOYMENT_TARGET=10.9' >> ~/.profile
    
    - name: Install JHBuild
      run: |
        cd $HOME
        mkdir -p ~/.config && mv ~/project/jhbuildrc-gtk-osx-glimpse ~/.config/jhbuildrc-custom
        curl  https://gitlab.gnome.org/samm-git/gtk-osx/raw/gimp/gtk-osx-setup.sh > gtk-osx-setup.sh
        chmod +x gtk-osx-setup.sh
        echo 'export PATH="$HOME/.cargo/bin:$HOME/.local/bin:$PATH:$HOME/.new_local/bin"' >> ~/.profile
        echo 'export ARCHFLAGS="-arch x86_64"' >> ~/.profile
        source ~/.profile
        PIPENV_YES=1 ./gtk-osx-setup.sh
        $HOME/.new_local/bin/jhbuild bootstrap-gtk-osx-glimpse
        cat ~/.profile

    - name: Install gtk-mac-bundler
      run: |
        cd ~/Source
        git clone https://github.com/samm-git/gtk-mac-bundler -b fix-otool
        cd gtk-mac-bundler
        make install

    - name: Bootstap build system
      run: |
        source ~/.profile && jhbuild build icu55 meta-gtk-osx-freetype meta-gtk-osx-bootstrap meta-gtk-osx-core
        find  ~/gtk/source -type d -mindepth 1 -maxdepth 1 | xargs -I% rm -rf %/*

    - name: Build GNU I.M.P Dependencies
      run: source ~/.profile && jhbuild build suitesparse $(jhbuild info gimp|grep '^Requires:'|sed -e 's|^Requires:||' -e 's|gegl||'|tr -d ',')

    - name: Build Webkit v1 Dependencies
      run: |
        source ~/.profile && jhbuild build $(jhbuild info webkit|grep '^Requires:'|sed 's|^Requires:||'|tr -d ',')
        find  ~/gtk/source -type d -mindepth 1 -maxdepth 1 | xargs -I% rm -rf %/*
    
    - name: Build Webkit v1
      run: |
        source ~/.profile && jhbuild build webkit
        find  ~/gtk/source -type d -mindepth 1 -maxdepth 1 | xargs -I% rm -rf %/*
    
    - name: Build and test BABL/GEGL
      run: source ~/.profile && jhbuild build --check babl gegl

    - name: Build In-development version of Glimpse Image Editor
      run: |
        source ~/.profile
        jhbuild build --check gimp

  build-linux-dev:
    runs-on: ubuntu-20.04
          
    steps:
    - uses: actions/checkout@v2
      with:
        path: Glimpse
      
    - name: Set up Ubuntu 20.04 runner
      run: |
        sudo sed -i '/deb-src/s/^# //' /etc/apt/sources.list
        sudo apt-get --quiet update --yes
            
    - name: Install build tools
      run: sudo apt-get --quiet install --yes build-essential git python3 python3-pip python3-setuptools python3-wheel ninja-build libgirepository1.0-dev valac

    - name: Install build dependencies
      run: sudo apt-get --quiet build-dep gimp
      
    - name: Install meson
      run: yes | sudo pip3 install meson
      
    - name: Set global environment variables
      run: |
        echo ::set-env name=SRC_PREFIX::${{ github.workspace }}
        echo ::set-env name=INSTALL_PREFIX::${{ github.workspace }}/glimpse-prefix
        echo ::set-env name=ARCH::"$(dpkg-architecture -qDEB_HOST_MULTIARCH 2> /dev/null)"
        
    - name: Set build environment variables
      run: |
        echo ::set-env name=PKG_CONFIG_PATH::$INSTALL_PREFIX/lib/pkgconfig:$INSTALL_PREFIX/lib/$ARCH/pkgconfig:$INSTALL_PREFIX/share/pkgconfig:$PKG_CONFIG_PATH
        echo ::set-env name=LD_LIBRARY_PATH::$INSTALL_PREFIX/lib:$INSTALL_PREFIX/lib/$ARCH:$LD_LIBRARY_PATH
        echo ::set-env name=ACLOCAL_FLAGS::"-I $INSTALL_PREFIX/share/aclocal $ACLOCAL_FLAGS"
        echo ::set-env name=XDG_DATA_DIRS::$INSTALL_PREFIX/share:/usr/local/share:/usr/share
        echo ::set-env name=PATH::$HOME/.local/bin:$INSTALL_PREFIX/bin:$PATH
    
    - name: Clone BABL 0.1.78 from GNOME gitlab server
      run: git clone --depth=1 --branch BABL_0_1_78 https://gitlab.gnome.org/GNOME/babl.git $SRC_PREFIX/babl
      
    - name: Clone MyPaint-Brushes 1.3.1 from Github
      run: git clone --depth=1 --branch v1.3.1 https://github.com/mypaint/mypaint-brushes.git $SRC_PREFIX/mypaint-brushes
      
    - name: Clone LibMyPaint 1.5.1 from Github
      run: git clone --depth=1 --branch v1.5.1 https://github.com/mypaint/libmypaint.git $SRC_PREFIX/libmypaint
      
    - name: Clone GEGL 0.4.22 from GNOME gitlab server
      run: git clone --depth=1 --branch GEGL_0_4_22 https://gitlab.gnome.org/GNOME/gegl.git $SRC_PREFIX/gegl
      
    - name: Create install prefix
      run: |
        mkdir -p $INSTALL_PREFIX/share/aclocal
      
    - name: Build BABL
      run: |
        cd $SRC_PREFIX/babl
        meson builddir --prefix=$INSTALL_PREFIX --buildtype=release -Db_lto=true -Dwith-docs=false
        cd $SRC_PREFIX/babl/builddir
        ninja && ninja install
        
    - name: Build mypaint-brushes
      run: |
        cd $SRC_PREFIX/mypaint-brushes
        ./autogen.sh --prefix=$INSTALL_PREFIX
        ./configure --prefix=$INSTALL_PREFIX
        make && make install
    
    - name: Build libmypaint
      run: |
        cd $SRC_PREFIX/libmypaint
        ./autogen.sh --prefix=$INSTALL_PREFIX
        ./configure --prefix=$INSTALL_PREFIX
        make && make install
        
    - name: Build GEGL
      run: |
        cd $SRC_PREFIX/gegl
        meson builddir --prefix=$INSTALL_PREFIX --buildtype=release -Db_lto=true -Ddocs=false
        cd $SRC_PREFIX/gegl/builddir
        ninja && ninja install
        
    - name: Build in-development version of Glimpse Image Editor
      run: |
        cd $SRC_PREFIX/Glimpse
        ./autogen.sh --prefix=$INSTALL_PREFIX --disable-gtk-doc --disable-gtk-doc-html --without-webkit --without-xvfb-run --disable-python --disable-check-update
        make && make install
        
    - name: Run unit tests against Glimpse Image Editor
      run: |
        cd $SRC_PREFIX/Glimpse
        make check
    
    - uses: actions/upload-artifact@v1
      with:
        name: glimpse-dev-x86_64-linux-gnu-${{ github.sha }}
        path: ${{ github.workspace }}/glimpse-prefix

  build-linux-flatpak-dev:
    runs-on: ubuntu-20.04
          
    steps:
    - uses: actions/checkout@v2
      with:
        path: Glimpse
      
    - name: Install Flatpak and flatpak-builder
      run: sudo apt-get --quiet install --yes flatpak flatpak-builder

    - name: Add the Flathub repository
      run: sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

    - name: Install GNOME 3.36 SDK
      run: sudo flatpak install -y flathub org.gnome.Platform//3.36 org.gnome.Sdk//3.36

    - name: Initialize git submodules
      run: |
        cd ${{ github.workspace }}/Glimpse
        git submodule update --init

    - name: Build development snapshot and package as Flatpak
      run: |
        cd ${{ github.workspace }}/Glimpse
        flatpak-builder --repo=${{ github.workspace }}/repo --force-clean --ccache ${{ github.workspace }}/_build build-aux/flatpak/org.glimpse_editor.Glimpse.json

    - name: Export Flatpak as single file bundle
      run: |
        flatpak build-bundle ${{ github.workspace }}/repo glimpse-dev.flatpak org.glimpse_editor.Glimpse
    
    - uses: actions/upload-artifact@v1
      with:
        name: glimpse-dev.flatpak-${{ github.sha }}
        path: ${{ github.workspace }}/glimpse-dev.flatpak

  build-windows-x64-dev:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v2
      with:
        path: Glimpse
        
    - uses: msys2/setup-msys2@v1
      with:
        msystem: MINGW64
        update: true
        install: git mingw-w64-x86_64-toolchain base-devel mingw-w64-x86_64-asciidoc mingw-w64-x86_64-drmingw mingw-w64-x86_64-gexiv2 mingw-w64-x86_64-ghostscript mingw-w64-x86_64-glib-networking mingw-w64-x86_64-graphviz mingw-w64-x86_64-gtk2 mingw-w64-x86_64-python2-pygtk mingw-w64-x86_64-iso-codes mingw-w64-x86_64-json-c mingw-w64-x86_64-json-glib mingw-w64-x86_64-lcms2 mingw-w64-x86_64-lensfun mingw-w64-x86_64-libheif mingw-w64-x86_64-libraw mingw-w64-x86_64-libspiro mingw-w64-x86_64-libwebp mingw-w64-x86_64-libwmf mingw-w64-x86_64-openexr mingw-w64-x86_64-poppler mingw-w64-x86_64-SDL2 mingw-w64-x86_64-suitesparse mingw-w64-x86_64-vala mingw-w64-x86_64-xpm-nox mingw-w64-x86_64-gtk-doc mingw-w64-x86_64-meson mingw-w64-x86_64-gobject-introspection mingw-w64-x86_64-babl mingw-w64-x86_64-libmypaint mingw-w64-x86_64-mypaint-brushes mingw-w64-x86_64-gegl

    - name: Build in-development version of Glimpse Image Editor
      run: |
        export INSTALL_PREFIX="`pwd`/glimpse-win-prefix"
        export PATH="$INSTALL_PREFIX/bin:$PATH"
        export PKG_CONFIG_PATH="$INSTALL_PREFIX/lib/pkgconfig:$INSTALL_PREFIX/share/pkgconfig:$PKG_CONFIG_PATH"
        export LD_LIBRARY_PATH="$INSTALL_PREFIX/lib:$LD_LIBRARY_PATH"
        export XDG_DATA_DIRS="$XDG_DATA_DIRS:$INSTALL_PREFIX/share:/usr/local/share/:/usr/share/"
        export ACLOCAL_FLAGS="-I/c/msys64/mingw64/share/aclocal"
        echo "== Building Glimpse DEV... =="
        cd Glimpse
        ./autogen.sh --prefix=$INSTALL_PREFIX --disable-gtk-doc --disable-gtk-doc-html --without-webkit --without-xvfb-run --disable-python --disable-check-update
        make && make install
    
    - uses: actions/upload-artifact@v1
      with:
        name: glimpse-dev-x86_64-windows-${{ github.sha }}
        path: ${{ github.workspace }}/glimpse-win-prefix

  build-windows-x86-dev:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v2
      with:
        path: Glimpse
        
    - uses: msys2/setup-msys2@v1
      with:
        msystem: MINGW32
        update: true
        install: git mingw-w64-i686-toolchain base-devel mingw-w64-i686-asciidoc mingw-w64-i686-drmingw mingw-w64-i686-gexiv2 mingw-w64-i686-ghostscript mingw-w64-i686-glib-networking mingw-w64-i686-graphviz mingw-w64-i686-gtk2 mingw-w64-i686-python2-pygtk mingw-w64-i686-iso-codes mingw-w64-i686-json-c mingw-w64-i686-json-glib mingw-w64-i686-lcms2 mingw-w64-i686-lensfun mingw-w64-i686-libheif mingw-w64-i686-libraw mingw-w64-i686-libspiro mingw-w64-i686-libwebp mingw-w64-i686-libwmf mingw-w64-i686-openexr mingw-w64-i686-poppler mingw-w64-i686-SDL2 mingw-w64-i686-suitesparse mingw-w64-i686-vala mingw-w64-i686-xpm-nox mingw-w64-i686-gtk-doc mingw-w64-i686-meson mingw-w64-i686-gobject-introspection mingw-w64-i686-babl mingw-w64-i686-libmypaint mingw-w64-i686-mypaint-brushes mingw-w64-i686-gegl

    - name: Build in-development version of Glimpse Image Editor
      run: |
        export INSTALL_PREFIX="`pwd`/glimpse-win-prefix"
        export PATH="$INSTALL_PREFIX/bin:$PATH"
        export PKG_CONFIG_PATH="$INSTALL_PREFIX/lib/pkgconfig:$INSTALL_PREFIX/share/pkgconfig:$PKG_CONFIG_PATH"
        export LD_LIBRARY_PATH="$INSTALL_PREFIX/lib:$LD_LIBRARY_PATH"
        export XDG_DATA_DIRS="$XDG_DATA_DIRS:$INSTALL_PREFIX/share:/usr/local/share/:/usr/share/"
        export ACLOCAL_FLAGS="-I/c/msys64/mingw64/share/aclocal"
        echo "== Building Glimpse DEV... =="
        cd Glimpse
        ./autogen.sh --prefix=$INSTALL_PREFIX --disable-gtk-doc --disable-gtk-doc-html --without-webkit --without-xvfb-run --disable-python --disable-check-update
        make && make install
    
    - uses: actions/upload-artifact@v1
      with:
        name: glimpse-dev-i686-windows-${{ github.sha }}
        path: ${{ github.workspace }}/glimpse-win-prefix
    